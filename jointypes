1. INNER JOIN
An INNER JOIN retrieves only the rows that have matching values in both tables.
This is the most common type of join and is used when you only want rows where there is a match between the tables.
Example:

sql
Copy code
SELECT Employees.Name, Departments.DepartmentName
FROM Employees
INNER JOIN Departments ON Employees.DepartmentID = Departments.DepartmentID;
This query returns employees with a department, showing only the records that match in both tables.

2. LEFT JOIN (or LEFT OUTER JOIN)
A LEFT JOIN retrieves all rows from the left table (first table listed) and the matching rows from the right table (second table listed). If there is no match, NULL values are returned for columns from the right table.
Useful when you want all records from the left table, even if there are no corresponding matches in the right table.
Example:

sql
Copy code
SELECT Employees.Name, Departments.DepartmentName
FROM Employees
LEFT JOIN Departments ON Employees.DepartmentID = Departments.DepartmentID;
This query returns all employees, including those who may not be assigned to a department.

3. RIGHT JOIN (or RIGHT OUTER JOIN)
A RIGHT JOIN retrieves all rows from the right table and the matching rows from the left table. If there is no match, NULL values are returned for columns from the left table.
This is useful when you want all records from the right table, even if there are no corresponding matches in the left table.
Example:

sql
Copy code
SELECT Employees.Name, Departments.DepartmentName
FROM Employees
RIGHT JOIN Departments ON Employees.DepartmentID = Departments.DepartmentID;
This query returns all departments, including any that have no assigned employees.

4. FULL JOIN (or FULL OUTER JOIN)
A FULL JOIN retrieves all rows where there is a match in either the left or right table. If there’s no match, NULL values are returned for the columns where data is missing.
This join includes all rows from both tables, combining the results of both LEFT and RIGHT joins.
Example:

sql
Copy code
SELECT Employees.Name, Departments.DepartmentName
FROM Employees
FULL OUTER JOIN Departments ON Employees.DepartmentID = Departments.DepartmentID;
This query returns all employees and all departments, even if there is no match between them.

5. CROSS JOIN
A CROSS JOIN produces a Cartesian product of the two tables, meaning it returns all possible combinations of rows. If one table has 5 rows and the other has 4, the result will have 
5
×
4
=
20
5×4=20 rows.
Typically used when you want to pair each row of one table with each row of another.
Example:

sql
Copy code
SELECT Employees.Name, Departments.DepartmentName
FROM Employees
CROSS JOIN Departments;
This query pairs each employee with every department.

6. SELF JOIN
A SELF JOIN is a join of a table with itself. It’s useful when you want to compare rows within the same table.
To distinguish between the two instances of the same table, aliases are used.
Example:

sql
Copy code
SELECT e1.Name AS Employee, e2.Name AS Manager
FROM Employees e1
INNER JOIN Employees e2 ON e1.ManagerID = e2.EmployeeID;
